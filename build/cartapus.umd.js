!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).cartapus=t()}(this,function(){function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function t(t){var r=0;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=function(t,r){if(t){if("string"==typeof t)return e(t,void 0);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,void 0):void 0}}(t)))return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(r=t[Symbol.iterator]()).next.bind(r)}function r(){}r.prototype={on:function(e,t,r){var n=this.e||(this.e={});return(n[e]||(n[e]=[])).push({fn:t,ctx:r}),this},once:function(e,t,r){var n=this;function s(){n.off(e,s),t.apply(r,arguments)}return s._=t,this.on(e,s,r)},emit:function(e){for(var t=[].slice.call(arguments,1),r=((this.e||(this.e={}))[e]||[]).slice(),n=0,s=r.length;n<s;n++)r[n].fn.apply(r[n].ctx,t);return this},off:function(e,t){var r=this.e||(this.e={}),n=r[e],s=[];if(n&&t)for(var o=0,i=n.length;o<i;o++)n[o].fn!==t&&n[o].fn._!==t&&s.push(n[o]);return s.length?r[e]=s:delete r[e],this}};var n=r;return n.TinyEmitter=r,function(e){var r,n;function s(t){var r;return void 0===t&&(t={}),(r=e.call(this)||this).intersect=r.intersect.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r)),r.options=Object.assign({root:null,rootMargin:"0px",threshold:.2,once:!1,events:!1},t),r.createMainObserver(),r.init(),r}n=e,(r=s).prototype=Object.create(n.prototype),r.prototype.constructor=r,r.__proto__=n;var o=s.prototype;return o.createMainObserver=function(){this.observers=[{observer:new IntersectionObserver(this.intersect,this.options),threshold:this.options.threshold,elements:[]}]},o.init=function(){this.getElems(),this.createObservers(),this.observe()},o.getElems=function(){this.elems=this.options.root?this.options.root.querySelectorAll("[data-cartapus]"):document.querySelectorAll("[data-cartapus]")},o.createObservers=function(){for(var e,r=t(this.elems);!(e=r()).done;){var n=e.value;if(n.dataset.cartapusThreshold){for(var s,o=parseFloat(n.dataset.cartapusThreshold),i=!1,a=t(this.observers);!(s=a()).done;){var c=s.value;o===c.threshold&&(i=!0,c.elements.push(n))}if(!i){var u={observer:new IntersectionObserver(this.intersect,Object.assign(this.options,{threshold:o})),threshold:o,elements:[n]};this.observers.push(u)}}else this.observers[0].elements.push(n)}},o.intersect=function(e,t){var r=this;e.forEach(function(e){e.isIntersecting?(e.target.dataset.cartapus="visible",r.options.once&&"false"!==e.target.dataset.cartapusOnce&&t.unobserve(e.target)):e.target.dataset.cartapus="hidden",r.options.events&&r.dispatch(e)})},o.dispatch=function(e){var t={element:e.target,visible:e.isIntersecting,intersection:e},r=new CustomEvent("cartapusintersect",{detail:t});e.target.dispatchEvent(r),this.emit("intersect",t)},o.observe=function(){this.observers.forEach(function(e){e.elements.forEach(function(t){e.observer.observe(t)})})},o.unobserve=function(){this.observers.forEach(function(e){e.elements.forEach(function(t){e.observer.unobserve(t)})})},o.destroy=function(){this.unobserve(),this.observers.forEach(function(e){e.elements=[]})},o.reset=function(){this.destroy(),this.init()},s}(n)});
//# sourceMappingURL=cartapus.umd.js.map
